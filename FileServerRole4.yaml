---
- hosts: all
  gather_facts: no
  tasks:
  
  - name: Create directory structure
    win_file:
      path: C:\Temp
      state: directory

  - name: Copy Build Script
    win_copy:
      src: "{{ playbook_dir }}/StorageReplicaBuild.ps1"
      dest: C:\Temp\StorageReplicaBuild.ps1
      force: no
       
  - name: Install the Storage Replica if not present
    win_feature:
      name: Storage-Replica
      state: present
      include_sub_features: yes
      include_management_tools: yes
    register: ReplicaInstall
    when: 
      - tasktype == "Build"
      
  - name: Reboot
    win_reboot:
    when: 
       - tasktype == "Build"
       - ReplicaInstall.reboot_required
    
  - name: Run state check to see if Replica Installed
    win_shell: C:\Temp\StorageReplicaBuild.ps1 -task "statecheck"
    register: stateresult
    
- hosts: "{{ sourceserver }}"
  gather_facts: yes
  tasks:

  - name: Run SRTest PowerShell
    win_shell: C:\Temp\StorageReplicaBuild.ps1 -task {{tasktype}} -sourceserver {{sourceserver}} -sourcedatavol {{sourcedatavol}} -sourcelogvol {{sourcelogvol}} -destserver {{destserver}} -destdatavol {{destdatavol}} -destlogvol {{destlogvol}}
    when: 
       - tasktype == "Test"
       - stateresult.rc == 0
       
    register: TestResult
    
    vars:
      ansible_become: true
      ansible_become_user: global.gam.com\RUN-ANSIBLE-PROD-WINRM
      ansible_become_password: "{{password}}"
      ansible_become_method: runas
      
  #- debug: msg="{{TestResult.stdout_lines}}"
  
  - name: Run Build Powershell
    win_shell: C:\Temp\StorageReplicaBuild.ps1 -task {{tasktype}} -sourceserver {{sourceserver}} -sourcedatavol {{sourcedatavol}} -sourcelogvol {{sourcelogvol}} -sourcerg {{sourcerg}} -destserver {{destserver}} -destdatavol {{destdatavol}} -destlogvol {{destlogvol}} -destrg {{destrg}}
    register: buildresult
    when: 
       - tasktype == "Build"
       - stateresult.rc == 0
    
    vars:
      ansible_become: true
      ansible_become_user: global.gam.com\RUN-ANSIBLE-PROD-WINRM
      ansible_become_password: "{{password}}"
      ansible_become_method: runas
    
  - name: Run Remove Service via Powershell
    win_shell: C:\Temp\StorageReplicaBuild.ps1 -task "RemoveService" -sourceserver {{sourceserver}} -sourcerg {{sourcerg}} -destserver {{destserver}} -destrg {{destrg}}
    register: removeresultservice
    when: 
       - tasktype == "Remove"
       - stateresult.rc == 0
    
    vars:
      ansible_become: true
      ansible_become_user: global.gam.com\RUN-ANSIBLE-PROD-WINRM
      ansible_become_password: "{{password}}"
      ansible_become_method: runas

- hosts: all
  gather_facts: no
  tasks:

  - name: Run Remove Groups via Powershell
    win_shell: C:\Temp\StorageReplicaBuild.ps1 -task "RemoveGroups" -sourceserver {{sourceserver}} -sourcerg {{sourcerg}} -destserver {{destserver}} -destrg {{destrg}}
    register: removeresultgroups
    when: 
       - tasktype == "remove"
       - stateresult.rc == 0
    
    vars:
      ansible_become: true
      ansible_become_user: global.gam.com\RUN-ANSIBLE-PROD-WINRM
      ansible_become_password: "{{password}}"
      ansible_become_method: runas

  - name: Check Status of Replication Groups
    win_shell: C:\Temp\StorageReplicaBuild.ps1 -task {{tasktype}} -sourceserver {{sourceserver}} -sourcerg {{sourcerg}} -destserver {{destserver}} -destrg {{destrg}}
    register: checkresults
    when: 
       - tasktype == "check_replication_status"
       - stateresult.rc == 0
    
    vars:
      ansible_become: true
      ansible_become_user: global.gam.com\RUN-ANSIBLE-PROD-WINRM
      ansible_become_password: "{{password}}"
      ansible_become_method: runas

  - name: Run Online Failback
    win_shell: C:\Temp\StorageReplicaBuild.ps1 -task {{tasktype}} -sourceserver {{sourceserver}} -sourcerg {{sourcerg}} -destserver {{destserver}} -destrg {{destrg}}
    register: failbackonline
    when: 
       - tasktype == "failback_online"
       - stateresult.rc == 0
    
    vars:
      ansible_become: true
      ansible_become_user: global.gam.com\RUN-ANSIBLE-PROD-WINRM
      ansible_become_password: "{{password}}"
      ansible_become_method: runas

